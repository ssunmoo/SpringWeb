plugins {
    id 'org.springframework.boot' version '2.7.5'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web' // 스프링 부트 라이브러리
    compileOnly 'org.projectlombok:lombok' // 롬복 라이브러리
    annotationProcessor 'org.projectlombok:lombok' // 롬복 라이브러리
    testImplementation 'org.springframework.boot:spring-boot-starter-test' // 스프링 부트 테스터 라이브러리
    runtimeOnly 'com.mysql:mysql-connector-j' // mysql 사용 라이브러리
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa' // 스프링 데이터 JPA
    implementation 'org.springframework.boot:spring-boot-starter-mail' // 스프링 메일 전송 SMTP
    
    implementation 'org.springframework.boot:spring-boot-starter-security' // 시큐리티 [ 인증/인가 ]
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client' //  SNS 로그인 

    implementation 'org.springframework.boot:spring-boot-devtools:2.6.2' // 자동빌드

    implementation 'org.springframework.boot:spring-boot-starter-websocket' // 웹 서버 소켓
}

tasks.named('test') {
    useJUnitPlatform()
}

// 스프링 부트 빌드 시 리액트도 같이 빌드
def frontendDir = "$projectDir/src/main/frontend"

sourceSets {
    main {
        resources { srcDirs = ["$projectDir/src/main/resources"]
        }
    }
}

processResources { dependsOn "copyReactBuildFiles" }

task installReact(type: Exec) {
    workingDir "$frontendDir"
    inputs.dir "$frontendDir"
    group = BasePlugin.BUILD_GROUP
    if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
        commandLine "npm.cmd", "audit", "fix"
        commandLine 'npm.cmd', 'install' }
    else {
        commandLine "npm", "audit", "fix" commandLine 'npm', 'install'
    }
}

task buildReact(type: Exec) {
    dependsOn "installReact"
    workingDir "$frontendDir"
    inputs.dir "$frontendDir"
    group = BasePlugin.BUILD_GROUP
    if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
        commandLine "npm.cmd", "run-script", "build"
    } else {
        commandLine "npm", "run-script", "build"
    }
}

task copyReactBuildFiles(type: Copy) {
    dependsOn "buildReact"
    from "$frontendDir/build"
    into "$projectDir/src/main/resources/static"
}

